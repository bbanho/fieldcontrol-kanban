version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: kanban-postgres-dev
    environment:
      POSTGRES_DB: kanban_db
      POSTGRES_USER: kanban_user
      POSTGRES_PASSWORD: kanban_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - kanban-network-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kanban_user -d kanban_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend NestJS (desenvolvimento)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: kanban-backend-dev
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://kanban_user:kanban_password@postgres:5432/kanban_db
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - kanban-network-dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run start:dev
    restart: unless-stopped

  # Frontend Angular (desenvolvimento)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: kanban-frontend-dev
    environment:
      NODE_ENV: development
    ports:
      - "4200:4200"
    depends_on:
      - backend
    networks:
      - kanban-network-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start
    restart: unless-stopped

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: kanban-redis-dev
    ports:
      - "6379:6379"
    networks:
      - kanban-network-dev
    restart: unless-stopped

  postgres_test:
    image: postgres:15-alpine
    container_name: kanban-postgres-test
    environment:
      POSTGRES_DB: kanban_db_test
      POSTGRES_USER: kanban_user
      POSTGRES_PASSWORD: kanban_password
    volumes:
      - ./docker/init-test-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - kanban-network-dev

volumes:
  postgres_data_dev:

networks:
  kanban-network-dev:
    driver: bridge 